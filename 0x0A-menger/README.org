      Project: 0x09. 2048 (single line) | Holberton Tulsa, OK, USA Intranet          Cookies.set('timezone', (new Date()).getTimezoneOffset() / -60.0);  

Toggle navigation[

](/)

*   [
    
    Help
    
    ](https://students-support.hbtn.io/hc)
*   [
    
    My Planning
    
    ](/planning/me)
*   [
    
    Projects
    
    ](/projects/current)
*   [
    
    My reports
    
    ](/users/my_reports)
*   [
    
    QA Reviews I can make
    
    ](/corrections/to_review)
*   [
    
    Mock interviews
    
    ](/dashboards/my_current_reefineries)

* * *

*   [
    
    Curriculums
    
    ](/dashboards/my_curriculums)
*   [
    
    Concepts
    
    ](/concepts)
*   [
    
    Conference rooms
    
    ](/dashboards/video_rooms)
*   [
    
    Servers
    
    ](/servers)
*   [
    
    Sandboxes
    
    ](/user_containers/current)
*   [
    
    Tools
    
    ](/dashboards/my_tools)
*   [
    
    Video on demand
    
    ](/dashboards/videos)

* * *

*   [
    
    Peers
    
    ](/users/peers)
*   [
    
    Captain's Logs
    
    ](/dashboards/my_captain_log)
*   [
    
    Officers
    
    ](/dashboards/my_officers)

* * *

*   [
    
    Slack
    
    ](https://holberton-school-org.slack.com)
    
    [
    
    My Profile
    
    ](/users/my_profile)
    

[

](/)

*   [
    
    Help
    
    ](https://students-support.hbtn.io/hc)
*   [
    
    My Planning
    
    ](/planning/me)
*   [
    
    Projects
    
    ](/projects/current)
*   [
    
    My reports
    
    ](/users/my_reports)
*   [
    
    QA Reviews I can make
    
    ](/corrections/to_review)
*   [
    
    Mock interviews
    
    ](/dashboards/my_current_reefineries)

* * *

*   [
    
    Curriculums
    
    ](/dashboards/my_curriculums)
*   [
    
    Concepts
    
    ](/concepts)
*   [
    
    Conference rooms
    
    ](/dashboards/video_rooms)
*   [
    
    Servers
    
    ](/servers)
*   [
    
    Sandboxes
    
    ](/user_containers/current)
*   [
    
    Tools
    
    ](/dashboards/my_tools)
*   [
    
    Video on demand
    
    ](/dashboards/videos)

* * *

*   [
    
    Peers
    
    ](/users/peers)
*   [
    
    Captain's Logs
    
    ](/dashboards/my_captain_log)
*   [
    
    Officers
    
    ](/dashboards/my_officers)

* * *

*   [
    
    Slack
    
    ](https://holberton-school-org.slack.com)
    
    [
    
    My Profile
    
    ](/users/my_profile)
    

[

You have a captain's log due before 2023-04-16 (in about 13 hours)! Log it now!

](/captain_logs/141975/edit)

0x09. 2048 (single line)
========================

Requirements
------------

### General

*   Allowed editors: `vi`, `vim`, `emacs`
*   All your files will be compiled on Ubuntu 14.04 LTS
*   Your programs and functions will be compiled with `gcc 4.8.4` using the flags `-Wall` `-Werror` `-Wextra` `and -pedantic`
*   All your files should end with a new line
*   Your code should use the `Betty` style. It will be checked using [betty-style.pl](https://github.com/hs-hq/Betty/blob/master/betty-style.pl "betty-style.pl") and [betty-doc.pl](https://github.com/hs-hq/Betty/blob/master/betty-doc.pl "betty-doc.pl")
*   You are not allowed to use global variables
*   No more than 5 functions per file
*   In the following examples, the `main.c` files are shown as examples. You can use them to test your functions, but you don’t have to push them to your repo (if you do we won’t take them into account). We will use our own `main.c` files at compilation. Our `main.c` files might be different from the one shown in the examples
*   The prototypes of all your functions should be included in your header file called `slide_line.h`
*   Don’t forget to push your header file
*   All your header files should be include guarded

Tasks
-----

### 0\. Slide line

mandatory

The goal of this task is to reproduce the [2048 game](/rltoken/4-myfi3saS1G27S6_W9q8A "2048 game")(NSFW !!) mechanics on a single horizontal line.

Given an array of integers, we want to be able to slide & merge it to the left or to the right. Identical numbers, if they are contiguous or separated by zeros, should be merged (See example)

*   Write a function that slides and merges an array of integers
*   Prototype: `int slide_line(int *line, size_t size, int direction);`
*   Where `line` points to an array of integers containing `size` elements, that must be slided & merged to the direction represented by `direction`. `direction` can be either:
    *   `SLIDE_LEFT`
    *   `SLIDE_RIGHT`
    *   If it is something else, the function must fail
    *   Both macros `SLIDE_LEFT` and `SLIDE_RIGHT` must be defined in `slide_line.h`
*   Your function must return `1` upon success, or `0` upon failure
*   You are **not allowed** to allocate memory dynamically (malloc, calloc, …)

    alex@~/0x09-slide_line$ cat 0-main.c 
    #include <stdlib.h>
    #include <stdio.h>
    
    #include "slide_line.h"
    
    #define LINE_SIZE   32
    
    /**
     * print_array - Prints out an array of integer, followed by a new line
     * 
     * @array: Pointer to the array of integer to be printed
     * @size: Number of elements in @array
     */
    static void print_array(int const *array, size_t size)
    {
        size_t i;
    
        printf("Line: ");
        for (i = 0; i < size; i++)
            printf("%s%d", i > 0 ? ", " : "", array[i]);
        printf("\n");
    }
    
    /**
     * main - Entry point
     *
     * @ac: Arguments counter
     * @av: Arguments vector
     *
     * Return: EXIT_SUCCESS or EXIT_FAILURE
     */
    int main(int ac, char **av)
    {
        int line[LINE_SIZE];
        int direction;
        size_t i, size;
    
        if (ac < 3)
        {
            fprintf(stderr, "Usage: %s <R/L> <n1> [n2...]\n", av[0]);
            return (EXIT_FAILURE);
        }
    
        /* Command line arguments to array of int */
        size = ac - 2;
        if (size > LINE_SIZE)
            size = LINE_SIZE;
        for (i = 0; i < size; i++)
            line[i] = atoi(av[i + 2]);
    
        /* Print the array */
        print_array(line, size);
    
        /* Parse direction */
        switch (*(av[1]))
        {
        case 'L':
            direction = SLIDE_LEFT;
            printf("Slide to the left\n");
            break;
        case 'R':
            direction = SLIDE_RIGHT;
            printf("Slide to the right\n");
            break;
        default:
            fprintf(stderr, "Unknown direction '%c'. Please use 'L' or 'R'", *(av[1]));
            return (EXIT_FAILURE);
        }
    
        /* Slide and merge */
        if (!slide_line(line, size, direction))
        {
            fprintf(stderr, "Failed to slide and merge line\n");
            return (EXIT_FAILURE);
        }
    
        /* Print the array */
        print_array(line, size);
    
        return (EXIT_SUCCESS);
    }
    alex@~/0x09-slide_line$ gcc -Wall -Wextra -Werror -pedantic -o 0-slide_line 0-main.c 0-slide_line.c
    alex@~/0x09-slide_line$ ./0-slide_line L 2 2 0 0
    Line: 2, 2, 0, 0
    Slide to the left
    Line: 4, 0, 0, 0
    alex@~/0x09-slide_line$ ./0-slide_line L 2 2 0 0 0 0 0 2 0 0 0 2 0 4
    Line: 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 4
    Slide to the left
    Line: 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    alex@~/0x09-slide_line$ ./0-slide_line R 2 2 2 2
    Line: 2, 2, 2, 2
    Slide to the right
    Line: 0, 0, 4, 4
    alex@~/0x09-slide_line$ ./0-slide_line R 2 2 2 2 2
    Line: 2, 2, 2, 2, 2
    Slide to the right
    Line: 0, 0, 2, 4, 4
    alex@~/0x09-slide_line$ ./0-slide_line L 2 4 8 16
    Line: 2, 4, 8, 16
    Slide to the left
    Line: 2, 4, 8, 16
    alex@~/0x09-slide_line$ ./0-slide_line R 2 4 8 16
    Line: 2, 4, 8, 16
    Slide to the right
    Line: 2, 4, 8, 16
    alex@~/0x09-slide_line$ ./0-slide_line R 4 4 8 16
    Line: 4, 4, 8, 16
    Slide to the right
    Line: 0, 8, 8, 16
    alex@~/0x09-slide_line$
    

**Repo:**

*   GitHub repository: `holbertonschool-interview`
*   Directory: `0x09-slide_line`
*   File: `0-slide_line.c, slide_line.h`